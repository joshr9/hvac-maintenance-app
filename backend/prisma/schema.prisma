generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  name          String
  email         String         @unique
  role          Role
  maintenanceLogs MaintenanceLog[]
  createdAt     DateTime       @default(now())
}

enum Role {
  TECHNICIAN
  ADMIN
}

model Property {
  id        Int      @id @default(autoincrement())
  name      String
  address   String   @unique
  qrCode    String?  // optional: could be linked to a unique ID
  suites    Suite[]
}

model Suite {
  id         Int         @id @default(autoincrement())
  name       String
  tenant     Boolean     @default(false)
  property   Property    @relation(fields: [propertyId], references: [id])
  propertyId Int
  hvacUnits  HvacUnit[]

  @@unique([name, propertyId])
}

model HvacUnit {
  id              Int             @id @default(autoincrement())
  label           String?
  serialNumber    String          @unique
  model           String
  installDate     DateTime
  filterSize      String?
  notes           String?
  suite           Suite?          @relation(fields: [suiteId], references: [id])
  suiteId         Int?            // ‚Üê make optional for now
  maintenanceLogs MaintenanceLog[]
}

model MaintenanceLog {
  id           Int       @id @default(autoincrement())
  hvacUnit     HvacUnit  @relation(fields: [hvacUnitId], references: [id])
  hvacUnitId   Int
  technician   User      @relation(fields: [technicianId], references: [id])
  technicianId Int
  maintenanceType MaintenanceType
  status       MaintenanceStatus @default(SCHEDULED)
  notes        String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  photos       MaintenancePhoto[] // adding ability for multiple photos
}


model MaintenancePhoto {
  id               Int             @id @default(autoincrement())
  url              String
  maintenanceLog   MaintenanceLog  @relation(fields: [maintenanceLogId], references: [id])
  maintenanceLogId Int
  uploadedAt       DateTime        @default(now())
}

enum MaintenanceType {
  INSPECTION
  FILTER_CHANGE
  FULL_SERVICE
  REPAIR
  OTHER
}

enum MaintenanceStatus {
  SCHEDULED
  IN_PROGRESS
  COMPLETED
  CANCELLED
}